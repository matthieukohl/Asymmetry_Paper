
% make sample plot of vertical velocity field

close all; clear;

%years      = [2009:2018];
years = [2017];
start_year = years(1);
end_year   = years(end);

months = {'jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov',...
    'dec'};

hemisphere = 'north';
tf_hemisphere = strcmp(hemisphere,'north');

if tf_hemisphere ==1
[lambda_era5_NH_x] = deal(zeros(161,37,12));
else
[lambda_era5_SH_x] = deal(zeros(161,37,12));
end

for ii = 6:6

season = months{ii};

norm = 0;
lambda = 0;

for year = years

disp('year:')
disp(year)

if tf_hemisphere ==1
file = ['/net/aimsir/archive1/mkohl/era_interim/Asymmetry_Project/era5/era5_NH_',num2str(ii),'_', num2str(year),'.nc'];
else
file = ['/net/aimsir/archive1/mkohl/era_interim/Asymmetry_Project/era5/era5_SH_',num2str(ii),'_',num2str(year),'.nc'];
end

lat = ncread(file,'latitude');
lon = ncread(file,'longitude');
level = ncread(file,'level');
time = ncread(file,'time');

time_range = season_selector(file, season, start_year, end_year);

for time_counter = 2

start = [1, 1, 1, time_counter];
count = [length(lon), length(lat), length(level), 1];

start_sf = [1, 1, time_counter];
count_sf = [length(lon), length(lat),1];

% have format lon/lat/level/time

omega = ncread(file,'w',start,count);

end
end
end

% lat lon plot

[Lon,Lat] = meshgrid(lon,lat);

figure('Renderer', 'painters', 'Position', [10 10 1000 300]); 
w = -omega(:,:,22);
cmax = max(abs(w(:))); 
nint = 20; cint = cmax/nint; 
contourf(Lon,Lat,w',-cmax:cint:cmax,'EdgeColor','none'); 
colormap(redblue(nint)); colorbar; 
caxis([-cmax cmax]);
xlabel('Lon({\circ})')
ylabel('Lat({\circ})')
title('\rm Vertical Velocity (500hPa)');
set(gca,'FontSize',12);

% make a 2D power spectrum plot

field = omega(:,:,22);

% Calculate the physical dimensions of the field
[Ny, Nx] = size(field);
Ld = 1e6/(2*sqrt(2));
Lx = 2*pi*6400*1e3*cosd(45);
Ly = 1000*deg2km(distance(lat(1),0,lat(end),0));
Lx = Lx/Ld; Ly = Ly/Ld;
dx = Lx / Nx;
dy = Ly / Ny;
x = (-(Nx-1)/2 : (Nx-1)/2) * dx;
y = (-(Ny-1)/2 : (Ny-1)/2) * dy;
[X, Y] = meshgrid(x, y);

% Calculate the 2D FFT of the field
fft_field = fft2(double(field));

% Shift the zero-frequency component to the center of the spectrum
fft_field = fftshift(fft_field);

% Calculate the magnitude of the complex FFT coefficients
mag_fft_field = abs(fft_field);

% Calculate the isotropic power spectrum by averaging the magnitude over
% all angles (theta) and frequencies (r)
r_max = floor(min(Nx/2, (Ny-1)/2));
iso_spec = zeros(1, r_max+1);
for i = 0 : r_max
    indices = (round(sqrt(X.^2 + Y.^2)/dx) == i);
    iso_spec(i+1) = mean(mag_fft_field(indices));
end

% Plot the isotropic power spectrum on a log-log scale
figure;
loglog((0:r_max)*2*pi/Lx, iso_spec);
xlabel('Spatial frequency (k)');
ylabel('Power spectrum');
title('Isotropic power spectrum');


% Define parameters
lmax = 20;  % maximum degree of spherical harmonics expansion
R = 6371;  % radius of the Earth in km
lat1 = 30;  % minimum latitude in degrees
lat2 = 70;  % maximum latitude in degrees
lon1 = 0;  % minimum longitude in degrees
lon2 = 360;  % maximum longitude in degrees
lat_res = 0.25;  % resolution in degrees of latitude
lon_res = 0.25;  % resolution in degrees of longitude

% Create grid of latitudes and longitudes
lat = linspace(30,70,161)*pi/180;  % convert to radians
lon = linspace(0,360,1440)*pi/180;  % convert to radians
[lat_grid, lon_grid] = meshgrid(lat, lon);

% Compute the function f(lat,lon) on the grid
f_grid = omega(:,:,22);

% Compute the spherical harmonic coefficients
C = zeros(lmax+1);
for l = 0:lmax
    for m = -l:l
        Ylm = spharm4(l, m, );
        C(l+1,m+l+1) = sum(sum(conj(Ylm).*f_grid.*sin(lat_grid)*lon_res*pi/180));
    end
end

% Compute the isotropic power spectrum
S_l = zeros(lmax+1, 1);
for l = 0:lmax
    S_l(l+1) = sum(abs(C(l+1,:)).^2)/(2*l+1);
end

% Compute the wavenumber
k = (0:lmax)*(lmax+1)/R;

% Plot the results
figure;
plot(k, S_l);
title(['Isotropic power spectrum with l_{max} = ' num2str(lmax)]);
xlabel('Wavenumber (km^{-1})');
ylabel('Power spectrum');


% slice plot

indxl = 100;
indxr = 700;
[a,indy] = min(abs(lat-45));
[a,indp] = min(abs(level-500));

figure('Renderer', 'painters', 'Position', [10 10 500 300])

plot(lon(indxl:indxr),-omega(indxl:indxr,indy,indp),'b','Linewidth',1.4); hold on; 
plot(lon(indxl:indxl),zeros(indxr-indxl,1),'k:'); 
xlim([lon(indxl) lon(indxr)]);
ylim([-1.5 1.5])
xlabel('Longitude (degrees)'); 
ylabel('-\omega (Pa/s)'); box off; 
set(gca,'FontSize',12)
saveas(gcf,'/disk7/mkohl/Mode_Kohl_OGorman/figures_sls/w_slice_era5','epsc')
